version: '2.1'
services:
  
  databasemysql:
    image: mysql:latest
    restart: always 
    networks:
      mynet:
        ipv4_address: 172.28.5.7    
    environment:
      - MYSQL_DATABASE=HELLOMY
      - MYSQL_USER=user
      - MYSQL_PASSWORD=12345789!6mJb
      - MYSQL_ROOT_PASSWORD=123457891012!6mJb
      - MYSQL_HOST=172.28.5.7
    ports:
        - "3306:3306"
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:3306"]
        interval: 30s
        timeout: 10s
        retries: 5 
  rediscache:
    networks:
     mynet:
        ipv4_address: 172.28.5.8  
    image: redis:latest
    ports:
      - 6379:6379

    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 15s
      timeout: 5s
      retries: 5   
  dbpostgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=keyckoakdb
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      mynet:
         ipv4_address: 172.28.5.80
    healthcheck:

      test: [ "CMD", "pg_isready", "-q", "-d", "keyckoakdb", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  keyckoak:
    networks:
     mynet:
        ipv4_address: 172.28.5.90  
    image: quay.io/keycloak/keycloak:legacy
    ports:
      - 8090:8080

    environment:
    #     DB_VENDOR: POSTGRES
    #     DB_ADDR: dbpostgres
    #     DB_DATABASE: keycloakdb
    #     DB_USER: postgres
    #     DB_SCHEMA: public
    #     DB_PORT: 5432        
    #    DB_PASSWORD: admin
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: admin 

      #- DB_VENDOR=POSTGRES
      #- DB_ADDR=dbpostgres #172.28.5.80
      #- DB_DATABASE=keyckoakdb
      #- DB_USER=postgres
      #- DB_SCHEMA=public
      #- DB_PASSWORD=admin
      #- DEBUG=true
      #- DEBUG_PORT='*:8787'
      #- DB_PORT=5432
      #- DB_DATABASE=keycloakdb
    volumes:
      #- ./keycloak_data:/opt/jboss/keycloak/standalone/data/  
      - ./config/standalone.xml:/opt/jboss/keycloak/standalone/configuration/standalone.xml
    depends_on:
     dbpostgres:
        condition: service_healthy
  app:
    build: .
    image: site2_app:latest
    ports:
      - "8080:8080"
    networks:
      mynet:
        ipv4_address: 172.28.5.9     

    volumes:

      - /home/uswr/Desktop/site2/:/project
      #- sitehome:/home/Desktop/site2
    environment:
       - OTELE_TRACE=true
       - OTEL_EXPORTER_OTLP_INSECURE=False
   #   - ELASTIC_APM_SERVICE_NAME=fastapi-545
   #   - ELASTIC_APM_SERVER_URL=http://172.28.5.20:8200
   #   - ELASTIC_APM_SECRET_TOKEN=cacc7099dcedff3ac82b0f225533f81439871f5952f39f555f02fc45a2bfa12c

    depends_on:
     rediscache:
        condition: service_healthy
     databasemysql:
        condition: service_healthy
     #apm:
     #   condition: service_healthy 
  nginx:
    image: nginx:latest
    ports:
      - "88:80"
      - "443:443"
      - "440:440"
      #- "9443:9443"
      #- "8243:8243"
      #- "8280:8280"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./confn/:/etc/nginx/ssl/
      # - ./confn/wso2nginx.crt:/etc/nginx/ssl/
    networks:
      mynet:
        ipv4_address: 172.28.5.70     
    depends_on:
     - app
  
        #condition: service_healthy  
    #command: sh -c "/wait && uvicorn app:app --host 0.0.0.0 --port 8080 --reload "
    #  #
    #environment:
    # - WAIT_HOSTS=databasemysql:3306
    # - WAIT_HOSTS_TIMEOUT=300
    # - WAIT_SLEEP_INTERVAL=30
    # 
    #  - WAIT_HOST_CONNECT_TIMEOUT=30
  #jaeger:
  #  image: jaegertracing/all-in-one    
  #  ports:
  #    - "5775:5775"
  #    - "6831:6831"
  #    - "6832:6832"
  #    - "5778:5778"
  #    - "16686:16686"
  #    - "14268:14268"
  #    - "14269:14269"
  #    - "4317:4317"
  #    - "4318:4318"
  #    - "14250:14250"
  #    - "9411:9411"
  #  environment:
  #   - METRICS_STORAGE_TYPE=prometheus
  #   - PROMETHEUS_SERVER_URL=http://175.28.5.12:9090       
  #   - PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=true
  #   - PROMETHEUS_QUERY_NAMESPACE=span_metrics
  #   - PROMETHEUS_QUERY_DURATION_UNIT=s
  #   - AGENT_HOST_PORT=otel-collector:55678
  #   - COLLECTOR_OTLP_ENABLED=true
  #  networks:
  #     mynet:
  #       ipv4_address: 172.28.5.11
#
  #prometheus:
  #  image: prom/prometheus:v2.36.2
  #  volumes:
  #    - "./config/prometheus.yml:/etc/prometheus/prometheus.yml"
  #   
  #  command:
  #    - '--config.file=/etc/prometheus/prometheus.yml'
  #    - '--storage.tsdb.path=/prometheus'
  #    - '--web.console.libraries=/usr/share/prometheus/console_libraries'
  #    - '--web.console.templates=/usr/share/prometheus/consoles'
  #  ports:
  #    - 9090:9090
  #  networks:
  #      mynet:
  #        ipv4_address: 172.28.5.12
  wso2:
   image: wso2/wso2am:latest
   container_name: wso2
   ports:
     - "9443:9443"
     - "8243:8243"
     - "8280:8280"
     - "5005:5005"
 
   environment:
     - USER=root
   #  - JAEGER_AGENT_HOST=jaeger
   #  - JAEGER_AGENT_PORT=6831
   #  - JAEGER_SERVICE_NAME=my-wso2-service
   #  - JAEGER_SAMPLER_TYPE=const
   #  - JAEGER_SAMPLER_PARAM=1
   #  - JAEGER_REPORTER_LOG_SPANS=true
   #  - JAEGER_REPORTER_FLUSH_INTERVAL=500ms
   #  - JAEGER_SAMPLER_MANAGER_HOST_PORT=jaeger:5778
   #  - HOST_NAME=testwso2
   #  - WSO2_ANALYTICS_ENABLED=false
   #  - WSO2_IS_ANALYTICS_ENABLED=false
   #  - WSO2_CARBON_DB_URL=jdbc:mysql://databasemysql:3306/wso2carbon_db?useSSL=false
   #  - WSO2_CARBON_DB_USERNAME=user
   #  - WSO2_CARBON_DB_PASSWORD=123456789!6mJb
   #  - WSO2_USER=user
   #  - WSO2_PASSWORD=myname
   #  - WSO2_APIM_GT_WK=true
   #  - WSO2_APIM_KEY_MANAGER_GT_WK=true
   networks:
       mynet:
         ipv4_address: 172.28.5.10     
   volumes:
     - wso2_data:/home/wso2carbon/wso2am-4.0.0/repository/deployment/server/
     - wso2_conf:/home/wso2carbon/wso2am-4.0.0/repository/conf/
     - ./config/log4j2.properties:/home/wso2carbon/wso2am-4.0.0/repository/conf/log4j2.properties
     - ./config/deployment.toml:/home/wso2carbon/wso2am-4.0.0/repository/conf/deployment.toml

    # -./config/axis2.xml:/home/wso2carbon/wso2am-4.0.0/repository/conf/axis2/axis2.xml

  #otel_collector:
  #  networks:
  #      mynet:
  #        ipv4_address: 172.28.5.15     
  #  image: otel/opentelemetry-collector-contrib
  #  environment:
  #    -  OTEL_EXPORTER_METRICS_TEMPORALITY_PREFERENCE="CUMULATIVE"
  #  volumes:
  #    - ./config/otel-collector-config.yml:/etc/otelcol/otel-collector-config.yml
  #  command: --config /etc/otelcol/otel-collector-config.yml
  #  #ports:
  #    #- "4317:4317"
  #  depends_on:
  #    - jaeger 
      
 # elasticsearch:
 #   #image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
 #   image: elasticsearch:7.17.10
 #   environment:
 #     - xpack.security.enabled=false
 #     - "discovery.type=single-node"
 #   networks:
 #       mynet:
 #         ipv4_address: 172.28.5.17
 #   ports:
 #     - 9200:9200
 #     - 9300:9300
 # 
 # kibana:
 #   #image: docker.elastic.co/kibana/kibana:7.11.0
 #   image: kibana:7.17.10
 #   environment:
 #     - ELASTICSEARCH_HOSTS=http://172.28.5.17:9200
 #   networks:
 #       mynet:
 #         ipv4_address: 172.28.5.19
 #   depends_on:
 #     - elasticsearch
 #   ports:
 #     - 5601:5601
 # apm:
 #   image: docker.elastic.co/apm/apm-server:7.17.10
 #   environment:
 #     - output.elasticsearch.hosts=["elasticsearch:9200"]
 #   command: 
 #     apm-server -e
 #      -E apm-server.rum.enabled=true
 #      -E setup.kibana.host=kibana:5601
 #      -E setup.template.settings.index.number_of_replicas=0
 #      -E apm-server.kibana.enabled=true
 #      -E apm-server.kibana.host=kibana:5601
 #      -E output.elasticsearch.hosts=["elasticsearch:9200"]      
 #   ports:
 #     - "8200:8200"
 #   depends_on:
 #     - elasticsearch
 #   healthcheck:
 #     interval: 10s
 #     retries: 12
 #     test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/      
 #   networks:
 #       mynet:
 #         ipv4_address: 172.28.5.20   

networks:
  mynet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1
          ip_range: 172.28.5.0/24

volumes:
  wso2_data:
  wso2_conf:

 # elasticsearch:
 #   image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
 #   environment:
 #     - discovery.type=single-node
 #   volumes:
 #     - elasticsearch_data:/usr/share/elasticsearch/data
 #   ports:
 #     - 9200:9200
 #     - 9300:9300 
 #   networks:
 #       mynet:
 #         ipv4_address: 172.28.5.12    
